[Commands]
1\Automatic=true
1\Command="copyq:\nvar window = str(data('application/x-copyq-owner-window-title'))\nvar tagsMime = 'application/x-copyq-tags'\nvar tags = str(data(tagsMime)) + ', ' + window\nsetData(tagsMime, tags)"
1\Icon=\xf009
1\Name=Store Window Title
10\Command="updateTitle = function() {}"
10\Icon=\xf070
10\IsScript=true
10\Name=No Clipboard in Title and Tool Tip
11\Command=copyq: toggle()
11\Icon=\xf022
11\IsGlobalShortcut=true
11\Name=Show/hide main window
12\Command=copyq: plugins.itemencrypted.encryptItems()
12\Icon=\xf023
12\InMenu=true
12\Input=!OUTPUT
12\Name=Encrypt (needs GnuPG)
12\Output=application/x-copyq-encrypted
12\Shortcut=ctrl+l
13\Command=copyq: plugins.itemencrypted.decryptItems()
13\Icon=\xf09c
13\InMenu=true
13\Input=application/x-copyq-encrypted
13\Name=Decrypt
13\Output=application/x-copyq-item
13\Shortcut=ctrl+l
14\Command=copyq: plugins.itemencrypted.copyEncryptedItems()
14\Icon=\xf13e
14\InMenu=true
14\Input=application/x-copyq-encrypted
14\Name=Decrypt and Copy
14\Shortcut=ctrl+shift+l
15\Command=copyq: plugins.itemencrypted.pasteEncryptedItems()
15\Icon=\xf13e
15\InMenu=true
15\Input=application/x-copyq-encrypted
15\Name=Decrypt and Paste
15\Shortcut=enter
16\Command=copyq: plugins.itempinned.pin()
16\Icon=\xf08d
16\InMenu=true
16\Input=!OUTPUT
16\Name=Pin
16\Output=application/x-copyq-item-pinned
17\Command=copyq: plugins.itempinned.unpin()
17\Icon=\xf08d
17\InMenu=true
17\Input=application/x-copyq-item-pinned
17\Name=Unpin
18\Command=copyq: plugins.itemtags.tag(decodeURIComponent('Important'))
18\Icon=\xf02b
18\InMenu=true
18\MatchCommand=copyq: plugins.itemtags.hasTag(decodeURIComponent('Important')) && fail()
18\Name=Tag as \x201cImportant\x201d
19\Command=copyq: plugins.itemtags.untag(decodeURIComponent('Important'))
19\Icon=\xf02b
19\InMenu=true
19\MatchCommand=copyq: plugins.itemtags.hasTag(decodeURIComponent('Important')) || fail()
19\Name=Remove tag \x201cImportant\x201d
2\Automatic=true
2\Command="copyq:\nvar time = dateString('yyyy-MM-dd hh:mm:ss')\nsetData('application/x-copyq-user-copy-time', time)\nvar tagsMime = 'application/x-copyq-tags'\nvar tags = str(data(tagsMime)) + ', ' + time\nsetData(tagsMime, tags)"
2\Icon=\xf017
2\Name=Store Copy Time
20\Command=copyq: plugins.itemtags.tag()
20\Icon=\xf02b
20\InMenu=true
20\Name=Add a Tag
21\Command=copyq: plugins.itemtags.untag()
21\Icon=\xf02b
21\InMenu=true
21\Input=application/x-copyq-tags
21\Name=Remove a Tag
22\Command=copyq: plugins.itemtags.clearTags()
22\Icon=\xf02b
22\InMenu=true
22\Input=application/x-copyq-tags
22\Name=Clear all tags
3\Command="copyq:\nvar color = 'rgba(255, 255, 0, 0.5)'\nvar mime = 'application/x-copyq-color'\nvar firstSelectedItem = selectedItems()[0]\nvar currentColor = str(read(mime, firstSelectedItem))\nif (currentColor != color)\n  setData(mime, color)\nelse\n  removeData(mime)"
3\Icon=\xf1fc
3\InMenu=true
3\Name=Mark/Unmark Items
3\Shortcut=alt+space
3\Tab=&clipboard
4\Automatic=true
4\Command="copyq:\nvar html = str(input())\nhtml = html.replace(/color\\s*:/g, 'xxx:')\nsetData('text/html', html)"
4\Enable=false
4\Icon=\xf042
4\InMenu=true
4\Input=text/html
4\Name=Remove Background and Text Colors
5\Automatic=true
5\Icon=\xf03e
5\Input=image/png
5\Name=Move Images to Other Tab
5\Remove=true
5\Tab=&Images
6\Command="copyq:\nvar snippetsTabName = 'Snippets'\n// List snippets instead of search combo box?\nvar listSnippets = false\n\nfunction newVarRe(content) {\n  return new RegExp('\\\\${' + content + '}', 'g')\n}\n\nfunction getText(item, format) {\n  return str(item[format] || '')\n}\n\nfunction assignPlaceholder(snippet, placeholder, value) {\n  return snippet.replace(newVarRe(placeholder + ':?.*?'), value)\n}\n\nfunction fuzzyIndexOf(snippetNames, snippetName) {\n    var re = new RegExp(snippetName, 'i')\n    for (var i in snippetNames) {\n      if (snippetNames[i].match(re))\n        return i;\n    }\n    return -1\n}\n\nfunction loadSnippets(snippetNames, snippets)\n{\n  var tabs = tab()\n  for (var i in tabs) {\n    var tabName = tabs[i];\n    if (tabName != snippetsTabName && tabName.indexOf(snippetsTabName + '/') != 0)\n      continue;\n\n    tab(tabName)\n    var prefix = tabName.substring(snippetsTabName.length + 1)\n    if (prefix)\n      prefix += ': '\n    for (var j = 0; j < size(); ++j) {\n      var snippet = getitem(j)\n      var snippetName = getText(snippet, mimeItemNotes)\n          || getText(snippet, mimeText)\n          || getText(snippet, mimeHtml)\n      snippetNames.push(prefix + snippetName)\n      snippets.push(snippet)\n    }\n  }\n}\n\nfunction askForSnippet(snippetNames, snippets) {\n  var list = listSnippets ? '.list:' : ''\n  var snippet = dialog(\n    '.title', 'Select Snippet',\n    list + 'Snippet', snippetNames\n  ) || abort()\n\n  if (listSnippets)\n      return snippets[snippet]\n\n  var i = snippetNames.indexOf(snippet)\n  if (i != -1)\n    return snippets[i]\n\n  i = fuzzyIndexOf(snippetNames, snippet)\n  if (i != -1)\n    return snippets[i]\n\n  popup(\n    'Snippet Not Found',\n    'No matching snippet found for \"' + snippetName + '\"!'\n  )\n  abort()\n}\n\nfunction getPlaceholders(snippet) {\n  var placeholders = {}\n  var m\n  var reVar = newVarRe('([^:}]*):?(.*?)')\n  while ((m = reVar.exec(snippet)) !== null) {\n    if (!(m[1] in placeholders))\n      placeholders[m[1]] = m[2].replace('\\\\n', '\\n')\n  }\n\n  return placeholders\n}\n\nfunction assignPlaceholders(text, values) {\n  if (!(values instanceof Object)) {\n    text = assignPlaceholder(text, '.*?', values)\n  } else {\n    for (var name in placeholders)\n      text = assignPlaceholder(text, name, values[name])\n  }\n\n  return text\n}\n\nfunction askToAssignPlaceholders(snippet, format, values) {\n  var text = getText(snippet, format)\n  var placeholders = getPlaceholders(text)\n\n  if (Object.keys(placeholders).length < 1)\n    return\n\n  if (values) {\n    snippet[format] = assignPlaceholders(text, values)\n    return values\n  }\n\n  var label = escapeHtml(text)\n    .replace(newVarRe('([^:}]*).*?'), '<b>$1</b>')\n\n  var dialogVars = [\n    '.title', 'Set Snippet Values',\n    '.label', label\n  ]\n\n  for (var name in placeholders) {\n    var values = placeholders[name].split(',')\n    dialogVars.push(name)\n    dialogVars.push((values.length == 1) ? values[0] : values)\n  }\n\n  var values = dialog.apply(this, dialogVars) || abort()\n  snippet[format] = assignPlaceholders(text, values)\n  return values\n}\n\nfunction pasteSnippet(mime, content) {\n  copy(mime, content)\n  copySelection(mime, content)\n  paste()\n}\n\nvar snippetNames = []\nvar snippets = []\nloadSnippets(snippetNames, snippets)\n\nvar snippet = askForSnippet(snippetNames, snippets)\n\nvalues = askToAssignPlaceholders(snippet, mimeText)\naskToAssignPlaceholders(snippet, mimeHtml, values)\n\npasteSnippet(mimeItems, pack(snippet))"
6\Icon=\xf1fb
6\IsGlobalShortcut=true
6\Name=Snippets
7\Command="copyq:\n// Copy without changing X11 selection (on Windows you can use copy instead).\nfunction copy2() {\n  try {\n    var x = config('copy_clipboard')\n    config('copy_clipboard', false)\n    try {\n      copy.apply(this, arguments)\n    } finally {\n      config('copy_clipboard', x)\n    }\n  } catch(e) {\n    copy.apply(this, arguments)\n  }\n}\ncopy2()\nvar text = str(clipboard())\nif (text) {\n  var r1 = 'Text'\n  var r2 = 'Replace with'\n  var reply = dialog(r1, '', r2, '')\n  if (reply) {\n    copy2(text.replace(new RegExp(reply[r1], 'g'), reply[r2]))\n    paste()\n  }\n}"
7\Icon=\xf303
7\IsGlobalShortcut=true
7\Name=Replace in Selection
8\Command="copyq:\nseconds = 2;\npopup(\"\", clipboard(), seconds * 1000)"
8\IsGlobalShortcut=true
8\Name=Show clipboard
9\Command="copyq:\nvar text = dialog('paste', str(clipboard()))\nif (text) {\n  copy(text)\n  copySelection(text)\n  paste()\n}"
9\Icon=\xf0ea
9\IsGlobalShortcut=true
9\Name=Edit and Paste
size=22
